enum
{
	P_WHITEBOX,
	P_WHITECIRCLE,
	P_LOGO,
	P_TITLE,
	P_TITLEITEM_00,
	P_TITLEITEM_01,
	P_TITLEITEM_02,
	P_TITLEITEM_03,
	P_TITLEITEM_04,
	P_TITLEWALL,
	P_TITLECONFIG,
	P_TITLECONFIGITEM_00,
	P_TITLECONFIGITEM_01,
	P_TITLECONFIGITEM_02,
	P_TITLECONFIGITEM_03,
	P_TITLECONFIGITEM_04,
	P_TITLECONFIGITEM_05,
	P_TITLECONFIGITEM_06,
	P_TITLECONFIGITEM_07,
	P_TITLECONFIGSCREEN_FULLSCREEN,
	P_TITLECONFIGSCREEN_WINDOW,
	P_TITLECONFIGDISPMOUSE_OFF,
	P_TITLECONFIGDISPMOUSE_ON,
	P_FIELDWALL_01,
	P_FIELDWALL_02,
	P_FIELDWALL_03,
	P_FIELDWALL_04,
	P_FIELDWALL_05,
	P_PAUSEWALL,
	P_ENDINGWALL,
	P_GAMEOVERWALL,

	P_STAND_00,
	P_STAND_01,
	P_STAND_02,
	P_STAND_03,
	P_STAND_04,
	P_STAND_05,
	P_STAND_06,
	P_STAND_07,

	P_BACK_00,
	P_BACK_01,
	P_BACK_02,
	P_BACK_03,
	P_BACK_04,
	P_BACK_05,
	P_BACK_06,
	P_BACK_07,
	P_BACK_08,
	P_BACK_09,
	P_BACK_10,
	P_BACK_11,
	P_BACK_12,
	P_BACK_13,
	P_BACK_14,
	P_BACK_15,

	P_FRONT_00,
	P_FRONT_01,
	P_FRONT_02,
	P_FRONT_03,
	P_FRONT_04,
	P_FRONT_05,
	P_FRONT_06,
	P_FRONT_07,
	P_FRONT_08,
	P_FRONT_09,
	P_FRONT_10,
	P_FRONT_11,
	P_FRONT_12,
	P_FRONT_13,
	P_FRONT_14,
	P_FRONT_15,

	P_STANDUP_00,
	P_STANDUP_01,
	P_STANDUP_02,
	P_STANDUP_03,
	P_STANDUP_04,
	P_STANDUP_05,
	P_STANDUP_06,
	P_STANDUP_07,
	P_STANDUP_08,
	P_STANDUP_09,
	P_STANDUP_10,
	P_STANDUP_11,

	P_JUMP_00,
	P_JUMP_01,
	P_JUMP_02,
	P_JUMP_03,
	P_JUMP_04,
	P_JUMP_05,
	P_JUMP_06,
	P_JUMP_07,
	P_JUMP_08,
	P_JUMP_09,
	P_JUMP_10,
	P_JUMP_11,

	P_JUMPBACK_00,
	P_JUMPBACK_01,
	P_JUMPBACK_02,
	P_JUMPBACK_03,
	P_JUMPBACK_04,
	P_JUMPBACK_05,
	P_JUMPBACK_06,
	P_JUMPBACK_07,
	P_JUMPBACK_08,

	P_JUMPFRONT_00,
	P_JUMPFRONT_01,
	P_JUMPFRONT_02,
	P_JUMPFRONT_03,
	P_JUMPFRONT_04,
	P_JUMPFRONT_05,
	P_JUMPFRONT_06,
	P_JUMPFRONT_07,
	P_JUMPFRONT_08,
	P_JUMPFRONT_09,

	P_DASH_00,
	P_DASH_01,
	P_DASH_02,
	P_DASH_03,
	P_DASH_04,
	P_DASH_05,
	P_DASH_06,
	P_DASH_07,
	P_DASH_08,
	P_DASH_09,

	P_AIRDASHEND_00,
	P_AIRDASHEND_01,
	P_AIRDASHEND_02,
	P_AIRDASHEND_03,
	P_AIRDASHEND_04,
	P_AIRDASHEND_05,

	P_UATTACK_00,
	P_UATTACK_01,
	P_UATTACK_02,
	P_UATTACK_03,
	P_UATTACK_04,
	P_UATTACK_05,
	P_UATTACK_06,
	P_UATTACK_07,
	P_UATTACK_08,
	P_UATTACK_09,
	P_UATTACK_10,
	P_UATTACK_11,
	P_UATTACK_12,

	P_CATTACK_00,
	P_CATTACK_01,
	P_CATTACK_02,
	P_CATTACK_03,
	P_CATTACK_04,
	P_CATTACK_05,
	P_CATTACK_06,
	P_CATTACK_07,
	P_CATTACK_08,
	P_CATTACK_09,
	P_CATTACK_10,
	P_CATTACK_11,
	P_CATTACK_12,
	P_CATTACK_13,
	P_CATTACK_14,
	P_CATTACK_15,

	P_DATTACK_00,
	P_DATTACK_01,
	P_DATTACK_02,
	P_DATTACK_03,
	P_DATTACK_04,
	P_DATTACK_05,
	P_DATTACK_06,
	P_DATTACK_07,
	P_DATTACK_08,
	P_DATTACK_09,
	P_DATTACK_10,
	P_DATTACK_11,
	P_DATTACK_12,
	P_DATTACK_13,
	P_DATTACK_14,
	P_DATTACK_15,
	P_DATTACK_16,

	P_UHIT_00,
	P_UHIT_01,
	P_UHIT_02,

	P_DHIT_00,
	P_DHIT_01,
	P_DHIT_02,

	P_BOMB,

	P_AIR_00,
	P_AIR_01,

	P_ETAMA2,

	P_EXPLOSION,
	P_HANABI, // not used
	P_REDRING, // not used
	P_STARRING, // not used

	P_CRASH,
	P_PLAYER_CRASH,

	// ìG01 >

	P_DOLL_00,
	P_DOLL_01,
	P_DOLL_02,
	P_DOLL_03,

	P_ALICE_00,
	P_ALICE_01,
	P_ALICE_02,
	P_ALICE_03,
	P_ALICE_04,
	P_ALICE_05,
	P_ALICE_06,
	P_ALICE_07,
	P_ALICE_08,
	P_ALICE_09,
	P_ALICE_FALL_00,
	P_ALICE_FALL_01,
	P_ALICE_FALL_02,
	P_ALICE_FALL_03,
	P_ALICE_FALL_04,
	P_ALICE_FALL_05,
	P_ALICE_JUMP_00,
	P_ALICE_JUMP_01,
	P_ALICE_JUMP_02,
	P_ALICE_JUMP_03,
	P_ALICE_JUMP_04,
	P_ALICE_JUMP_05,
	P_ALICE_JUMP_06,
	P_ALICE_JUMP_07,
	P_ALICE_JUMP_08,

	P_P_CUBE,
	P_R_CUBE,
	P_G_CUBE,
	P_B_CUBE,
	P_Y_CUBE,
	P_W_CUBE,
	P_X_CUBE,

	P_SUICA_00,
	P_SUICA_01,
	P_SUICA_02,
	P_SUICA_03,
	P_SUICA_04,
	P_SUICA_05,
	P_SUICA_06,
	P_SUICA_07,
	P_SUICA_08,
	P_SUICA_09,
	P_SUICA_10,
	P_SUICA_11,
	P_SUICA_12,
	P_SUICA_13,
	P_SUICA_14,
	P_SUICA_15,
	P_SUICA_16,
	P_SUICA_17,
	P_SUICA_ATTACK_00,
	P_SUICA_ATTACK_01,

	P_BUBBLE_00,
	P_BUBBLE_01,
	P_BUBBLE_02,
	P_BUBBLE_03,
	P_BUBBLE_04,
	P_BUBBLE_05,
	P_BUBBLE_06,
	P_BUBBLE_07,
	P_BUBBLE_08,
	P_BUBBLE_09,
	P_BUBBLE_10,
	P_BUBBLE_11,
	P_BUBBLE_12,
	P_BUBBLE_13,
	P_BUBBLE_14,
	P_BUBBLE_BACK,

	P_MARISA_00,
	P_MARISA_01,
	P_MARISA_02,
	P_MARISA_03,
	P_MARISA_04,
	P_MARISA_05,
	P_MARISA_06,
	P_MARISA_07,

	P_MARISA_ATTACK_00,
	P_MARISA_ATTACK_01,
	P_MARISA_ATTACK_02,
	P_MARISA_ATTACK_03,
	P_MARISA_ATTACK_04,
	P_MARISA_ATTACK_05,
	P_MARISA_ATTACK_06,
	P_MARISA_ATTACK_07,
	P_MARISA_ATTACK_08,
	P_MARISA_ATTACK_09,
	P_MARISA_ATTACK_10,
	P_MARISA_ATTACK_11,
	P_MARISA_ATTACK_12,

	P_MARISA_MASTERSPARK_00,
	P_MARISA_MASTERSPARK_01,
	P_MARISA_MASTERSPARK_02,
	P_MARISA_MASTERSPARK_03,
	P_MARISA_MASTERSPARK_04,
	P_MARISA_MASTERSPARK_05,
	P_MARISA_MASTERSPARK_06,
	P_MARISA_MASTERSPARK_07,
	P_MARISA_MASTERSPARK_08,
	P_MARISA_MASTERSPARK_09,

	P_AYA_00,
	P_AYA_01,
	P_AYA_02,
	P_AYA_03,
	P_AYA_04,
	P_AYA_05,
	P_AYA_06,
	P_AYA_07,
	P_AYA_DASH_00,
	P_AYA_DASH_01,
	P_AYA_DASH_02,
	P_AYA_DASH_03,
	P_AYA_DASH_04,
	P_AYA_DASH_05,
	P_AYA_DASH_06,
	P_AYA_DASH_07,
	P_AYA_DASH_08,
	P_AYA_DASH_09,
	P_AYA_DASH_10,
	P_AYA_ATTACK_00,
	P_AYA_ATTACK_01,
	P_AYA_ATTACK_02,
	P_AYA_ATTACK_03,
	P_AYA_ATTACK_04,
	P_AYA_ATTACK_05,
	P_AYA_ATTACK_06,
	P_AYA_ATTACK_07,
	P_AYA_ATTACK_08,
	P_AYA_ATTACK_09,
	P_AYA_ATTACK_10,
	P_AYA_ATTACK_11,
	P_AYA_ATTACK_12,
	P_AYA_ATTACK_13,

	P_UDONGE_00,
	P_UDONGE_01,
	P_UDONGE_02,
	P_UDONGE_ATTACK_00,
	P_UDONGE_ATTACK_01,
	P_UDONGE_ATTACK_02,
	P_UDONGE_ATTACK_03,
	P_UDONGE_ATTACK_04,
	P_UDONGE_ATTACK_05,
	P_UDONGE_ATTACK_06,
	P_UDONGE_ATTACK_07,
	P_UDONGE_ATTACK_08,
	P_UDONGE_ATTACK_09,
	P_UDONGE_ATTACK_10,
	P_UDONGE_ATTACK_11,
	P_UDONGE_ATTACK_12,
	P_UDONGE_ATTACKBACK,

	// < ìG01

	// ìG02 >

	// < ìG02

	// Boss01 >

	P_MIKO_A,
	P_MIKO_B,
	P_MIKO_BACK,
	P_MIKO_KOMACHI_BACK,

	// < Boss01

	P_MAPITEMTOTTA_00,
	P_MAPITEMTOTTA_01,
	P_MAPITEMTOTTA_02,

	P_PLAYER_KAGE,

	// ----

	P_SUBMENUWALL,
	P_DUMMY,
	P_TAMA,
	P_KUMASELECTWALL,
	P_CURSOR,

	P_MAX, // num of member
};

void SILoadPixel(int h, int x, int y);
void SISavePixel(int h, int x, int y);

int Pic_Load(int resno, autoList<uchar> *image);
void Pic_Unload(int resno, int h);
Resource_t *Pic_Res(void);

void ReleasePictures(void);

autoList<void (*)(int, int, int)> *S_SoftImageFilterList(void);
autoList<void (*)(int)> *S_GraphicHandleFilterList(void);
autoList<int> *S_EnableTransList(void);

extern int EnableTrans;

/*
	Pic(D_* | DTP) Ç±ÇÒÇ»ä¥Ç∂Ç≈égÇ§ÅB
*/
#define DTP 0x40000000 // D_* To P_*

int Pic(int resno);

void SetAlpha(double a);
void SetBlendAdd(double a);
void SetBlendInv(double a = 1.0);
void ResetBlend(void);
void SetBright(double r, double g, double b);
void ResetBright(void);

extern int Pic_W;
extern int Pic_H;

void CheckPicSize(int h);

extern int ScreenSlip_X;
extern int ScreenSlip_Y;

void SimpleDrawPic(int x, int y, int h);
void SimpleDrawPic(double x, double y, int h);
void SimpleDrawPicFloat(double x, double y, int h);
void DrawPic(double x, double y, int h);
void DrawPicRect(int x, int y, int w, int h, int hdl);

void DrawBegin(double x, double y, int h);
void DrawRotate(double rot);
void DrawRotate(int numer, int denom);
void DrawXZoom(double zoom);
void DrawYZoom(double zoom);
void DrawZoom(double zoom);
extern int MosaicMode;
void DrawEnd(void);
